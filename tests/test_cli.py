from pathlib import Path

from micropython_magic.cli import STARTUP_TEMPLATE, disable_startup, enable_startup


def test_enable_creates_file(tmp_path):
    ipython_dir = str(tmp_path)
    path, created = enable_startup(profile="profile_default", filename="00-micropython_magic.py", ipython_dir=ipython_dir)
    assert created is True
    p = Path(path)
    assert p.exists()
    content = p.read_text(encoding="utf-8")
    assert "micropython_magic" in content


def test_enable_no_overwrite_existing_with_marker(tmp_path):
    ipython_dir = tmp_path
    startup_dir = tmp_path / "profile_default" / "startup"
    startup_dir.mkdir(parents=True, exist_ok=True)
    file_path = startup_dir / "00-micropython_magic.py"
    # create a pre-existing file that already references micropython_magic
    file_path.write_text("# preexisting\n# micropython_magic reference")

    path, created = enable_startup(profile="profile_default", filename="00-micropython_magic.py", ipython_dir=str(ipython_dir))
    # enable_startup should detect the reference and not overwrite
    assert created is False
    assert Path(path).exists()


def test_enable_force_overwrite(tmp_path):
    ipython_dir = tmp_path
    startup_dir = tmp_path / "profile_default" / "startup"
    startup_dir.mkdir(parents=True, exist_ok=True)
    file_path = startup_dir / "00-micropython_magic.py"
    file_path.write_text("# unrelated content")

    path, created = enable_startup(profile="profile_default", filename="00-micropython_magic.py", force=True, ipython_dir=str(ipython_dir))
    assert created is True
    assert Path(path).exists()
    assert "Auto-generated by micropython-magic" in Path(path).read_text(encoding="utf-8")


def test_disable_removes_generated_file(tmp_path):
    ipython_dir = tmp_path
    startup_dir = tmp_path / "profile_default" / "startup"
    startup_dir.mkdir(parents=True, exist_ok=True)
    file_path = startup_dir / "00-micropython_magic.py"
    # write an auto-generated-like template
    file_path.write_text(STARTUP_TEMPLATE)

    path, removed = disable_startup(profile="profile_default", filename="00-micropython_magic.py", ipython_dir=str(ipython_dir))
    assert removed is True
    assert not file_path.exists()


def test_disable_does_not_remove_other_files(tmp_path):
    ipython_dir = tmp_path
    startup_dir = tmp_path / "profile_default" / "startup"
    startup_dir.mkdir(parents=True, exist_ok=True)
    file_path = startup_dir / "00-micropython_magic.py"
    file_path.write_text("# custom startup - do not remove")

    path, removed = disable_startup(profile="profile_default", filename="00-micropython_magic.py", ipython_dir=str(ipython_dir))
    assert removed is False
    assert file_path.exists()
